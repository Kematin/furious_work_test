from aiogram import Router
from aiogram.filters import Command
from aiogram.types import (
    CallbackQuery,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    Message,
)
from create_bot import bot
from service import (
    check_subscribe,
    delete_message,
    previous_messages,
)

faq_router = Router()

start_button = InlineKeyboardButton(
    text="üëàüëà –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ", callback_data="start"
)
faq_button = InlineKeyboardButton(text="üëà –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤–æ–ø—Ä–æ—Å–∞–º", callback_data="faq")

go_to_faq = InlineKeyboardMarkup(
    inline_keyboard=[
        [faq_button],
        [start_button],
    ]
)


async def handle_faq(user_id: int):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üéØ –ì–∞—Ä–∞–Ω—Ç–∏—è", callback_data="faq_guarantee")],
            [InlineKeyboardButton(text="üöó –î–æ—Å—Ç–∞–≤–∫–∞", callback_data="faq_shipping")],
            [InlineKeyboardButton(text="üíØ –ö–∞—á–µ—Å—Ç–≤–æ", callback_data="faq_quality")],
            [start_button],
        ]
    )

    await delete_message(chat_id=user_id)
    message = await bot.send_message(
        chat_id=user_id, text="–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–º—ã –≤–æ–ø—Ä–æ—Å–æ–≤:", reply_markup=keyboard
    )
    previous_messages[user_id] = message.message_id


@faq_router.message(Command("faq"))
async def faq_command(message: Message):
    if await check_subscribe(message=message):
        await handle_faq(message.from_user.id)


@faq_router.callback_query(lambda c: c.data == "faq")
async def faq_query(callback_query: CallbackQuery):
    if await check_subscribe(message=callback_query):
        await handle_faq(callback_query.from_user.id)


@faq_router.callback_query(lambda c: c.data == "faq_shipping")
async def faq_shipping(callback_query: CallbackQuery):
    user_id = callback_query.from_user.id
    await delete_message(user_id)
    message = await bot.send_message(
        chat_id=user_id,
        text="<b>–î–æ—Å—Ç–∞–≤–∫–∞ –æ—Å—É—â—Å—Ç–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ –†–æ—Å—Å–∏–∏!!!</b>\n\n–ú—ã –¥–æ—Å—Ç–∞–≤–ª—è–µ–º <b>–ü–æ—á—Ç–æ–π –†–æ—Å—Å–∏–∏</b> –ø–æ —Ü–µ–Ω–µ –≤ 30 —Ä—É–±–ª–µ–π :)",
        reply_markup=go_to_faq,
    )
    previous_messages[user_id] = message.message_id


@faq_router.callback_query(lambda c: c.data == "faq_guarantee")
async def faq_guarantee(callback_query: CallbackQuery):
    user_id = callback_query.from_user.id
    await delete_message(user_id)
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üéØ –ì–∞—Ä–∞–Ω—Ç–∏—è —Ç–æ–≤–∞—Ä–∞", callback_data="faq_guarantee_item"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ôª –í–æ–∑–≤—Ä–∞—Ç —Ç–æ–≤–∞—Ä–∞", callback_data="faq_guarantee_refund"
                )
            ],
            [faq_button],
        ]
    )

    message = await bot.send_message(
        chat_id=user_id, text="–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å:", reply_markup=keyboard
    )
    previous_messages[user_id] = message.message_id


@faq_router.callback_query(lambda c: c.data.startswith("faq_guarantee_"))
async def faq_guarantity_sub(callback_query: CallbackQuery):
    user_id = callback_query.from_user.id
    await delete_message(chat_id=user_id)
    data = callback_query.data.split("_")[-1]

    if data == "item":
        message = await bot.send_message(
            chat_id=user_id, text="–ì–∞—Ä–∞–Ω—Ç–∏—è —Ç–æ–≤–∞—Ä–∞ 1 –≥–æ–¥", reply_markup=go_to_faq
        )
    else:
        message = await bot.send_message(
            chat_id=user_id,
            text="–í–æ–∑–≤—Ä–∞—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ –Ω–∞—à–µ–≥–æ –º–µ–Ω–¥–∂–µ—Ä–∞\n\n–ï—Å–ª–∏ –≤–∞—à —Ç–æ–≤–∞—Ä –±—ã–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω –≤ —Ö–æ–¥–µ –¥–æ—Å—Ç–∞–≤–∫–∏, –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –µ–º—É –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É",
            reply_markup=go_to_faq,
        )

    previous_messages[user_id] = message.message_id


@faq_router.callback_query(lambda c: c.data == "faq_quality")
async def faq_quality(callback_query: CallbackQuery):
    user_id = callback_query.from_user.id
    await delete_message(user_id)
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üß∂ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã", callback_data="faq_quality_material"
                )
            ],
            [faq_button],
        ]
    )

    message = await bot.send_message(
        chat_id=user_id, text="–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å:", reply_markup=keyboard
    )
    previous_messages[user_id] = message.message_id


@faq_router.callback_query(lambda c: c.data == "faq_quality_material")
async def faq_quantity_sub(callback_query: CallbackQuery):
    user_id = callback_query.from_user.id
    await delete_message(chat_id=user_id)

    message = await bot.send_message(
        chat_id=user_id,
        text="–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –Ω–∞—à–µ–π –æ–¥–µ–∂–¥—ã:\n1. –•–ª–æ–ø–æ–∫\n2. –õ–µ–Ω\n3. –®–µ–ª–∫\n4. –®–µ—Ä—Å—Ç—å",
        reply_markup=go_to_faq,
    )
    previous_messages[user_id] = message.message_id
